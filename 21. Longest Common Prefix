Write a function to find the longest common prefix string amongst an array of strings.
If there is no common prefix, return an empty string "".

Example 1:
Input: strs = ["flower","flow","flight"]
Output: "fl"

Example 2:
Input: strs = ["dog","racecar","car"]
Output: ""
Explanation: There is no common prefix among the input strings.
 
Constraints:
1 <= strs.length <= 200
0 <= strs[i].length <= 200
strs[i] consists of only lowercase English letters.



class Solution {
    public boolean check(String[] strs, char ch, int idx){
        for(int i=0; i<strs.length; i++){
            if (strs[i].length() <= idx || strs[i].charAt(idx) != ch) {
                return false;
            }
        }
        return true;
    }
    public String longestCommonPrefix(String[] strs) {
        String s = strs[0];
        StringBuilder sb = new StringBuilder("");
        for(int i=0; i<s.length(); i++){
            char ch = s.charAt(i);
            if(check(strs, ch, i)){
                sb.append(ch);
            } else{
                break;
            }
        }
        return sb.toString();  
    }
}
